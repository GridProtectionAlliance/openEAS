-- Add custom data tables
-- for analysis results here

-- Example:
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CSA_2_Result')
BEGIN

CREATE TABLE CSA_2_Result
(
	ID INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    EventID INT NOT NULL UNIQUE REFERENCES Event(ID),
    IsDataError VARCHAR(20) NOT NULL,
	OutOpTypeA VARCHAR(50) NOT NULL,
    OutOpTypeB VARCHAR(50) NOT NULL,
    OutOpTypeC VARCHAR(50) NOT NULL,

	IsCapSwitch VARCHAR(20) NOT NULL,
	IsCapSwitchCondL VARCHAR(20) NOT NULL,
	OutFrequency FLOAT NOT NULL,
	OutVoltagesMax FLOAT NOT NULL,
	OutVoltagesMean FLOAT NOT NULL,
	OutVTHDFlag VARCHAR(20) NOT NULL,
	OutVTHDBefore FLOAT NOT NULL,
	OutVTHDAfter FLOAT NOT NULL,
	OutVTHDIncrease FLOAT NOT NULL,
	IsResonanceA VARCHAR(20) NOT NULL,
	ResFrequencyA FLOAT NOT NULL,
	PeakPUVA FLOAT NOT NULL,
	VrmsA_bf FLOAT NOT NULL,
	VrmsA_af FLOAT NOT NULL,
	DVrmsA FLOAT NOT NULL,
	PeakIA FLOAT NOT NULL,
	IrmsA_bf FLOAT NOT NULL,
	IrmsA_af FLOAT NOT NULL,
	DIrmsA FLOAT NOT NULL,
	SwitchXientFreqIAHz FLOAT NOT NULL,
	DQA FLOAT NOT NULL,
	PFAInit FLOAT NOT NULL,
	PFAEnd FLOAT NOT NULL,
	THDIA_bf FLOAT NOT NULL,
	THDIA_af FLOAT NOT NULL,
	DTHDIA FLOAT NOT NULL,
	THDVA_bf FLOAT NOT NULL,
	THDVA_af FLOAT NOT NULL,
	DTHDVA FLOAT NOT NULL,
	StepA_bf int NOT NULL,
	StepA_af int NOT NULL,
	XCapA_bf FLOAT NOT NULL,
	XCapA_af FLOAT NOT NULL,
	IsResonanceB VARCHAR(20) NOT NULL,
	ResFrequencyB FLOAT NOT NULL,
	PeakPUVB FLOAT NOT NULL,
	VrmsB_bf FLOAT NOT NULL,
	VrmsB_af FLOAT NOT NULL,
	DVrmsB FLOAT NOT NULL,
	PeakIB FLOAT NOT NULL,
	IrmsB_bf FLOAT NOT NULL,
	IrmsB_af FLOAT NOT NULL,
	DIrmsB FLOAT NOT NULL,
	SwitchXientFreqIBHz FLOAT NOT NULL,
	DQB FLOAT NOT NULL,
	PFBInit FLOAT NOT NULL,
	PFBEnd FLOAT NOT NULL,
	THDIB_bf FLOAT NOT NULL,
	THDIB_af FLOAT NOT NULL,
	DTHDIB FLOAT NOT NULL,
	THDVB_bf FLOAT NOT NULL,
	THDVB_af FLOAT NOT NULL,
	DTHDVB FLOAT NOT NULL,
	StepB_bf int NOT NULL,
	StepB_af int NOT NULL,
	XCapB_bf FLOAT NOT NULL,
	XCapB_af FLOAT NOT NULL,
	IsResonanceC VARCHAR(20) NOT NULL,
	ResFrequencyC FLOAT NOT NULL,
	PeakPUVC FLOAT NOT NULL,
	VrmsC_bf FLOAT NOT NULL,
	VrmsC_af FLOAT NOT NULL,
	DVrmsC FLOAT NOT NULL,
	PeakIC FLOAT NOT NULL,
	IrmsC_bf FLOAT NOT NULL,
	IrmsC_af FLOAT NOT NULL,
	DIrmsC FLOAT NOT NULL,
	SwitchXientFreqICHz FLOAT NOT NULL,
	DQC FLOAT NOT NULL,
	PFCInit FLOAT NOT NULL,
	PFCEnd FLOAT NOT NULL,
	THDIC_bf FLOAT NOT NULL,
	THDIC_af FLOAT NOT NULL,
	DTHDIC FLOAT NOT NULL,
	THDVC_bf FLOAT NOT NULL,
	THDVC_af FLOAT NOT NULL,
	DTHDVC FLOAT NOT NULL,
	StepC_bf int NOT NULL,
	StepC_af int NOT NULL,
	XCapC_bf FLOAT NOT NULL,
	XCapC_af FLOAT NOT NULL,
	SwitchedOutDurA FLOAT NOT NULL,
	SwitchedOutDurB FLOAT NOT NULL,
	SwitchedOutDurC FLOAT NOT NULL,
	StepChangeRpA FLOAT NOT NULL,
	StepChangeRpB FLOAT NOT NULL,
	StepChangeRpC FLOAT NOT NULL,
	RpBeforeSwitchedOutA FLOAT NOT NULL,
	RpBeforeSwitchedOutB FLOAT NOT NULL,
	RpBeforeSwitchedOutC FLOAT NOT NULL,
	RpAfterSwitchedOutA FLOAT NOT NULL,
	RpAfterSwitchedOutB FLOAT NOT NULL,
	RpAfterSwitchedOutC FLOAT NOT NULL,
	StepChangeXpA FLOAT NOT NULL,
	StepChangeXpB FLOAT NOT NULL,
	StepChangeXpC FLOAT NOT NULL,
	XpBeforeSwitchedOutA FLOAT NOT NULL,
	XpBeforeSwitchedOutB FLOAT NOT NULL,
	XpBeforeSwitchedOutC FLOAT NOT NULL,
	XpAfterSwitchedOutA FLOAT NOT NULL,
	XpAfterSwitchedOutB FLOAT NOT NULL,
	XpAfterSwitchedOutC FLOAT NOT NULL,
	TimeOfEvent FLOAT NOT NULL,
	Time1stClosingOp FLOAT NOT NULL,
	Time2ndClosingOp FLOAT NOT NULL,
	PhaseDiff1stClosing FLOAT NOT NULL,
	FirstCloseEnergy FLOAT NOT NULL,
	FirstCloseA FLOAT NOT NULL,
	SecondCloseA FLOAT NOT NULL,
	FirstCloseB FLOAT NOT NULL,
	SecondCloseB FLOAT NOT NULL,
	FirstCloseC FLOAT NOT NULL,
	SecondCloseC FLOAT NOT NULL,
	AbsOpenTimeA FLOAT NOT NULL,
	AbsOpenTimeB FLOAT NOT NULL,
	AbsOpenTimeC FLOAT NOT NULL,


)

CREATE NONCLUSTERED INDEX IX_CSAResult_EventID
ON CSA_2_Result(EventID ASC)

END
GO


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CSA_2_LineSetting')
BEGIN

CREATE TABLE CSA_2_LineSetting(
	ID INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    LineID INT NOT NULL UNIQUE REFERENCES Line(ID),
	NumArgsOut INT NOT NULL DEFAULT(28),
	ITHDLimit FLOAT NOT NULL DEFAULT(5),
	NominalVoltage FLOAT NOT NULL DEFAULT(500),
	UnloadedCurrent FLOAT NOT NULL DEFAULT(5),
	NominalBuskVLL FLOAT NOT NULL DEFAULT(161),
	T2ndClosing FLOAT NOT NULL  DEFAULT(4),
	CapSwitcherType FLOAT NOT NULL DEFAULT(0),
	StepSizeQ3 FLOAT NOT NULL DEFAULT(18000)
)

CREATE NONCLUSTERED INDEX IX_CSALineSetting_LineID
ON CSALineSetting(LineID ASC)

END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'HasCSA_2_Result')
BEGIN
	DROP FUNCTION HasCSA_2_Result
END
GO

CREATE FUNCTION HasCSA_2_Result
(
	@eventID INT
)
RETURNS INT
AS BEGIN
	DECLARE @hasCSAResult INT

	SELECT @hasCSAResult = COUNT(*)
	FROM CSAResult
	WHERE
		EventID = @eventID AND
		IsCapSwitch = 'Yes'

	RETURN @hasCSAResult
END
GO

MERGE EASExtension AS Target
USING (VALUES('CSA_2_Service', 'HasCSA_2_Result')) AS Source(ServiceName, HasResultFunction)
ON Source.ServiceName = Target.ServiceName
WHEN MATCHED THEN
    UPDATE SET HasResultFunction = Source.HasResultFunction
WHEN NOT MATCHED THEN
    INSERT VALUES(Source.ServiceName, Source.HasResultFunction);
GO